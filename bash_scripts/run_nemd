#!/bin/bash

COUNTER=0
for var in "$@"
do
    COUNTER=$((COUNTER+1))
    if [[ "$var" == *.py ]]; then
      FILE_IDX=$COUNTER
      break
    fi
done

if [ -z $FILE_IDX ]; then
    echo "Please provide a python script name after "$0"."
    exit
fi

# Python filename found in the args
FILE=${@:$FILE_IDX:1}
DIR="$(dirname $FILE)"
BASENAME=`basename $FILE`
# Assume that the file come with absolute or relative path (curdir implicitly)
SPATH="$(cd $DIR; pwd)/$BASENAME"
[ ! -f $SPATH ] && [ -n "$NEMD_SCRIPTS" ] && SPATH=$NEMD_SCRIPTS/$BASENAME
[ ! -f $SPATH ] && [ -n "$NEMD_WORKFLOWS" ] && SPATH=$NEMD_WORKFLOWS/$BASENAME
[ ! -f $SPATH ] && SPATH=`which $BASENAME`
if [ ! -f $SPATH ]; then
    echo "Cannot find $BASENAME in $NEMD_SCRIPTS, $NEMD_WORKFLOWS or in $PATH"
    echo "Please install $BASENAME, or source the premake file in the source code."
    exit
fi

SCRIPT_ARGS="${@:0:$FILE_IDX} $SPATH ${@:$FILE_IDX+1}"

for ((i=0; i<=$#; i++)); do

  if [ ${!i} == '-JOBNAME' ]; then
    j=$(( $i + 1 ))
    export JOBNAME=${!j}
    [[ -z "$JOBNAME" ]] && echo "Please provide a jobname after -JOBNAME flag" && exit
    echo "$JOBNAME set as the JOBNAME"
  fi

  if [ ${!i} == '-INTERACTIVE' ]; then
    export INTERACTIVE='1'
  fi

  if [ ${!i} == '-DEBUG' ]; then
    export DEBUG='1'
  fi

done

echo "Running python3 $SCRIPT_ARGS"

env FOO=BAR python3 $SCRIPT_ARGS
