units real
atom_style full
bond_style harmonic
angle_style harmonic
dihedral_style opls
improper_style cvff
pair_style lj/cut/coul/long 11.0 11.0
pair_modify mix geometric
special_bonds lj/coul 0 0 0.5
kspace_style pppm 0.0001
read_data polymer_builder.data

timestep 1
thermo_modify flush yes
thermo 1000
dump 1 all custom 1000 dump.custom.gz id xu yu zu
dump_modify 1 sort id
min_style fire
minimize 1.0e-6 1.0e-8 1000000 10000000

fix rigid all shake 0.0001 10 10000 b 1 a 1
velocity all create 10 482748
fix 1a all temp/berendsen 10 10 100
fix 1b all nve
run 1000
unfix 1b
unfix 1a

fix 2a all temp/berendsen 10 298.15 100
fix 2b all nve
run 10000
unfix 2b
unfix 2a

variable vol equal vol
fix 3a all ave/time 1 100 100 c_thermo_press v_vol file press_vol.data
variable amp equal "0.05*vol^(1/3)"
fix 3b all deform 1 x wiggle ${amp} 10000.0 y wiggle ${amp} 10000.0 z wiggle ${amp} 10000.0
fix 3c all temp/berendsen 298.15 298.15 100
fix 3d all nve
run 100000
unfix 3d
unfix 3c
unfix 3b
unfix 3a

variable modulus python getModulus
python getModulus input 2 press_vol.data 100 return v_modulus format sif here "from nemd.pyfunc import getModulus"
print "Modulus = ${modulus}"

variable ave_press python getPress
python getPress input 1 press_vol.data return v_ave_press format sf here "from nemd.pyfunc import getPress"
print "Averaged Press = ${ave_press}"

fix 6a all press/berendsen iso ${ave_press} 1 1000 modulus ${modulus}
fix 6b all temp/berendsen 298.15 298.15 100
fix 6c all nve
run 100000
unfix 6c
unfix 6b
unfix 6a

fix 7a all press/berendsen iso 1.0 1 1000 modulus ${modulus}
fix 7b all temp/berendsen 298.15 298.15 100
fix 7c all nve
run 1000000
unfix 7c
unfix 7b
unfix 7a

fix 8a all press/berendsen iso 1.0 1 1000 modulus ${modulus}
fix 8b all temp/berendsen 298.15 298.15 100
fix 8c all nve
run 1000000
unfix 8c
unfix 8b
unfix 8a

